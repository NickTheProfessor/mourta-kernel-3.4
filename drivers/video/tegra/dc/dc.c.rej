diff a/drivers/video/tegra/dc/dc.c b/drivers/video/tegra/dc/dc.c	(rejected hunks)
@@ -1577,6 +1608,7 @@ static int tegra_dc_init(struct tegra_dc *dc)
 	int i;
 	int int_enable;
 
+	tegra_dc_io_start(dc);
 	tegra_dc_writel(dc, 0x00000100, DC_CMD_GENERAL_INCR_SYNCPT_CNTRL);
 	if (dc->ndev->id == 0) {
 		tegra_mc_set_priority(TEGRA_MC_CLIENT_DISPLAY0A,
@@ -1655,14 +1687,19 @@ static int tegra_dc_init(struct tegra_dc *dc)
 
 	trace_display_mode(dc, &dc->mode);
 
-	if (dc->mode.pclk)
-		if (tegra_dc_program_mode(dc, &dc->mode))
+	if (dc->mode.pclk) {
+		if (tegra_dc_program_mode(dc, &dc->mode)) {
+			tegra_dc_io_end(dc);
 			return -EINVAL;
+		}
+	}
 
 	/* Initialize SD AFTER the modeset.
 	   nvsd_init handles the sd_settings = NULL case. */
 	nvsd_init(dc, dc->out->sd_settings);
 
+	tegra_dc_io_end(dc);
+
 	return 0;
 }
 
@@ -1675,22 +1712,24 @@ static bool _tegra_dc_controller_enable(struct tegra_dc *dc)
 
 	tegra_dc_setup_clk(dc, dc->clk);
 	tegra_dc_clk_enable(dc);
+	tegra_dc_io_start(dc);
 
 	tegra_dc_power_on(dc);
 
 	/* do not accept interrupts during initialization */
 	tegra_dc_writel(dc, 0, DC_CMD_INT_MASK);
 
-	enable_dc_irq(dc->irq);
+	enable_dc_irq(dc);
 
 	failed_init = tegra_dc_init(dc);
 	if (failed_init) {
 		tegra_dc_writel(dc, 0, DC_CMD_INT_MASK);
-		disable_irq(dc->irq);
+		disable_irq_nosync(dc->irq);
 		tegra_dc_clear_bandwidth(dc);
 		tegra_dc_clk_disable(dc);
 		if (dc->out && dc->out->disable)
 			dc->out->disable();
+		tegra_dc_io_end(dc);
 		return false;
 	}
 
@@ -2201,12 +2246,20 @@ static int tegra_dc_probe(struct nvhost_device *ndev,
 	}
 
 	/* interrupt handler must be registered before tegra_fb_register() */
-	if (request_irq(irq, tegra_dc_irq, 0,
+	if (request_threaded_irq(irq, NULL, tegra_dc_irq, IRQF_ONESHOT,
 			dev_name(&ndev->dev), dc)) {
 		dev_err(&ndev->dev, "request_irq %d failed\n", irq);
 		ret = -EBUSY;
 		goto err_put_emc_clk;
 	}
+	disable_dc_irq(dc);
+
+	mutex_lock(&dc->lock);
+	if (dc->pdata->flags & TEGRA_DC_FLAG_ENABLED) {
+		_tegra_dc_set_default_videomode(dc);
+		dc->enabled = _tegra_dc_enable(dc);
+	}
+	mutex_unlock(&dc->lock);
 
 	mutex_lock(&dc->lock);
 	if (dc->pdata->flags & TEGRA_DC_FLAG_ENABLED) {
