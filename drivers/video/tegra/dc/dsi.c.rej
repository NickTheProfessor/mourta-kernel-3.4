diff a/drivers/video/tegra/dc/dsi.c b/drivers/video/tegra/dc/dsi.c	(rejected hunks)
@@ -1632,8 +1632,7 @@ static int tegra_dsi_wait_frame_end(struct tegra_dc *dc,
 	INIT_COMPLETION(dc->frame_end_complete);
 
 	/* unmask frame end interrupt */
-	val = tegra_dc_readl(dc, DC_CMD_INT_MASK);
-	tegra_dc_writel(dc, val | FRAME_END_INT, DC_CMD_INT_MASK);
+	val = tegra_dc_unmask_interrupt(dc, FRAME_END_INT);
 
 	timeout = wait_for_completion_interruptible_timeout(
 			&dc->frame_end_complete,
@@ -2766,9 +2779,8 @@ void tegra_dsi_stop_host_cmd_v_blank_dcs(struct tegra_dc_dsi_data * dsi)
 	u32 cnt;
 
 	mutex_lock(&dsi->lock);
-	tegra_dc_dsi_hold_host(dc);
-
 	tegra_dc_io_start(dc);
+	tegra_dc_dsi_hold_host(dc);
 
 	if (atomic_read(&dsi_syncpt_rst)) {
 		tegra_dsi_wait_frame_end(dc, dsi, 2);
@@ -3189,9 +3201,14 @@ static void _tegra_dc_dsi_enable(struct tegra_dc *dc)
 	u32 i;
 
 	mutex_lock(&dsi->lock);
+	tegra_dc_io_start(dc);
 	tegra_dc_dsi_hold_host(dc);
 
-	tegra_dc_io_start(dc);
+	/* Stop DC stream before configuring DSI registers
+	 * to avoid visible glitches on panel during transition
+	 * from bootloader to kernel driver
+	 */
+	tegra_dsi_stop_dc_stream(dc, dsi);
 
 	if (dsi->enabled) {
 		if (dsi->ulpm) {
@@ -3856,8 +3873,8 @@ static void tegra_dc_dsi_disable(struct tegra_dc *dc)
 	int err;
 	struct tegra_dc_dsi_data *dsi = tegra_dc_get_outdata(dc);
 
-	tegra_dc_io_start(dc);
 	mutex_lock(&dsi->lock);
+	tegra_dc_io_start(dc);
 
 	if (dsi->status.dc_stream == DSI_DC_STREAM_ENABLE)
 		tegra_dsi_stop_dc_stream_at_frame_end(dc, dsi, 2);
